import React, { useState, useRef, useEffect } from 'react';
import {
  Play,
  Pause,
  Square,
  Mic,
  MicOff,
  Settings,
  Upload,
  Github,
  FileText,
  TrendingUp,
  Award,
  Calendar,
  Clock,
  Target,
  Brain,
  Zap,
  Users,
  ChevronRight,
  Download,
  RotateCcw,
  Lightbulb,
  BarChart3,
  Video,
  MessageSquare,
  Star,
  AlertCircle,
} from 'lucide-react';

const AITrainer = () => {
  const [activeTab, setActiveTab] = useState('dashboard');
  const [isRecording, setIsRecording] = useState(false);
  const [isMuted, setIsMuted] = useState(false);
  const [isTraining, setIsTraining] = useState(false);
  const [currentScore, setCurrentScore] = useState(8.1);
  const [stressLevel, setStressLevel] = useState(65);
  const [selectedProject, setSelectedProject] = useState('foodtech');
  const [showAddProject, setShowAddProject] = useState(false);
  const [projects, setProjects] = useState({
    foodtech: {
      name: 'FoodTech Startup',
      readiness: 67,
      files: ['presentation.pptx', 'business_plan.pdf'],
      github: 'github.com/user/foodtech-app',
      lastSession: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥',
    },
    diploma: {
      name: 'ML –≤ –º–µ–¥–∏—Ü–∏–Ω–µ',
      readiness: 23,
      files: ['thesis.docx', 'research_data.xlsx'],
      github: 'github.com/user/medical-ml',
      lastSession: '–í—á–µ—Ä–∞',
    },
  });

  // Add Project Modal Component
  const AddProjectModal = () => {
    const [projectName, setProjectName] = useState('');
    const [projectType, setProjectType] = useState('startup');
    const [githubRepo, setGithubRepo] = useState('');
    const [files, setFiles] = useState([]);
    const [step, setStep] = useState(1);

    const handleAddProject = () => {
      const newProjectId = projectName.toLowerCase().replace(/\s+/g, '-');
      const newProject = {
        name: projectName,
        readiness: 0,
        files: files,
        github: githubRepo,
        lastSession: '–ù–∏–∫–æ–≥–¥–∞',
        type: projectType,
      };

      setProjects((prev) => ({
        ...prev,
        [newProjectId]: newProject,
      }));

      setSelectedProject(newProjectId);
      setShowAddProject(false);

      // Reset form
      setProjectName('');
      setProjectType('startup');
      setGithubRepo('');
      setFiles([]);
      setStep(1);
    };

    if (!showAddProject) return null;

    return (
      <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div className="bg-white rounded-lg p-6 w-96 max-h-96 overflow-y-auto">
          <div className="flex items-center justify-between mb-4">
            <h3 className="text-lg font-bold">–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç</h3>
            <button
              onClick={() => setShowAddProject(false)}
              className="text-gray-500 hover:text-gray-700"
            >
              ‚úï
            </button>
          </div>

          {step === 1 && (
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
                </label>
                <input
                  type="text"
                  value={projectName}
                  onChange={(e) => setProjectName(e.target.value)}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–æ–π —Å—Ç–∞—Ä—Ç–∞–ø"
                  className="w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞
                </label>
                <select
                  value={projectType}
                  onChange={(e) => setProjectType(e.target.value)}
                  className="w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                >
                  <option value="startup">üöÄ –°—Ç–∞—Ä—Ç–∞–ø / –ü–∏—Ç—á</option>
                  <option value="diploma">üéì –î–∏–ø–ª–æ–º / –ù–∞—É—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞</option>
                  <option value="business">üíº –ë–∏–∑–Ω–µ—Å-–ø—Ä–æ–µ–∫—Ç</option>
                  <option value="technical">‚ö° –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è</option>
                </select>
              </div>

              <button
                onClick={() => setStep(2)}
                disabled={!projectName}
                className="w-full bg-blue-600 text-white p-2 rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed"
              >
                –î–∞–ª–µ–µ: –§–∞–π–ª—ã –∏ GitHub
              </button>
            </div>
          )}

          {step === 2 && (
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                </label>
                <input
                  type="text"
                  value={githubRepo}
                  onChange={(e) => setGithubRepo(e.target.value)}
                  placeholder="github.com/user/repository"
                  className="w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã
                </label>
                <div className="border-2 border-dashed border-gray-300 rounded-lg p-4 text-center">
                  <Upload className="mx-auto mb-2 text-gray-400" size={24} />
                  <p className="text-sm text-gray-600 mb-2">
                    –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª—ã –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞
                  </p>
                  <input
                    type="file"
                    multiple
                    accept=".pptx,.pdf,.docx,.txt"
                    onChange={(e) => {
                      const fileNames = Array.from(e.target.files).map(
                        (f) => f.name
                      );
                      setFiles(fileNames);
                    }}
                    className="hidden"
                    id="file-upload"
                  />
                  <label
                    htmlFor="file-upload"
                    className="bg-blue-500 text-white px-4 py-2 rounded text-sm cursor-pointer hover:bg-blue-600"
                  >
                    –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã
                  </label>
                </div>

                {files.length > 0 && (
                  <div className="mt-2 space-y-1">
                    <p className="text-sm font-medium text-gray-700">
                      –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤:
                    </p>
                    {files.map((file, index) => (
                      <div
                        key={index}
                        className="text-xs text-gray-600 flex items-center"
                      >
                        <FileText size={12} className="mr-1" />
                        {file}
                      </div>
                    ))}
                  </div>
                )}
              </div>

              <div className="flex space-x-2">
                <button
                  onClick={() => setStep(1)}
                  className="flex-1 bg-gray-200 text-gray-700 p-2 rounded-lg hover:bg-gray-300"
                >
                  –ù–∞–∑–∞–¥
                </button>
                <button
                  onClick={handleAddProject}
                  className="flex-1 bg-green-600 text-white p-2 rounded-lg hover:bg-green-700"
                >
                  –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
                </button>
              </div>
            </div>
          )}
        </div>
      </div>
    );
  };

  const skills = {
    persuasiveness: 82,
    clarity: 65,
    stress: 45,
    knowledge: 78,
  };

  const achievements = [
    { name: '–ñ–µ–ª–µ–∑–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã', icon: 'üí™', unlocked: true },
    { name: '–ü–æ–ø–∞–¥–∞–Ω–∏–µ –≤ —Ü–µ–ª—å', icon: 'üéØ', unlocked: true },
    { name: '–°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥', icon: 'üîê', unlocked: true, isNew: true },
    { name: '–ú–∞—Å—Ç–µ—Ä Q&A', icon: '‚ùì', unlocked: false },
  ];

  // Dashboard Component
  const Dashboard = () => (
    <div className="flex h-full">
      {/* Left Panel - Projects */}
      <div className="w-80 bg-slate-50 p-6 border-r">
        <div className="flex items-center justify-between mb-6">
          <h2 className="text-xl font-bold text-gray-800">üìÅ –ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã</h2>
          <button className="text-blue-600 hover:text-blue-800">
            <Upload size={20} />
          </button>
        </div>

        {Object.entries(projects).map(([key, project]) => (
          <div
            key={key}
            className={`p-4 rounded-lg mb-4 cursor-pointer transition-all ${
              selectedProject === key
                ? 'bg-blue-50 border-2 border-blue-200'
                : 'bg-white border border-gray-200 hover:border-blue-300'
            }`}
            onClick={() => setSelectedProject(key)}
          >
            <div className="flex items-center justify-between mb-2">
              <h3 className="font-semibold text-gray-800">{project.name}</h3>
              <span className="text-sm text-gray-500">
                {project.readiness}%
              </span>
            </div>

            <div className="space-y-1 mb-3">
              {project.files.map((file) => (
                <div
                  key={file}
                  className="flex items-center text-sm text-gray-600"
                >
                  <FileText size={14} className="mr-2" />
                  {file}
                </div>
              ))}
              <div className="flex items-center text-sm text-gray-600">
                <Github size={14} className="mr-2" />
                {project.github}
              </div>
            </div>

            <div className="w-full bg-gray-200 rounded-full h-2">
              <div
                className="bg-blue-600 h-2 rounded-full transition-all"
                style={{ width: `${project.readiness}%` }}
              />
            </div>

            <div className="text-xs text-gray-500 mt-2">
              –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è: {project.lastSession}
            </div>
          </div>
        ))}

        <button
          onClick={() => setShowAddProject(true)}
          className="w-full p-4 border-2 border-dashed border-gray-300 rounded-lg text-gray-500 hover:border-blue-400 hover:text-blue-600 transition-all"
        >
          ‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç
        </button>
      </div>

      {/* Center Panel - Training Zone */}
      <div className="flex-1 p-8">
        <div className="bg-white rounded-xl shadow-lg p-8 h-full">
          <div className="text-center mb-8">
            <h1 className="text-3xl font-bold text-gray-800 mb-2">
              üéØ –ì–æ—Ç–æ–≤—ã –∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ "{projects[selectedProject].name}"?
            </h1>

            <div className="w-32 h-32 mx-auto mb-6 bg-gradient-to-br from-blue-400 to-purple-500 rounded-full flex items-center justify-center">
              <div className="text-4xl">ü§ñ</div>
            </div>

            <div className="bg-gray-50 p-6 rounded-lg mb-8">
              <p className="text-lg text-gray-700 italic">
                "–ü—Ä–∏–≤–µ—Ç! –Ø –∏–∑—É—á–∏–ª –≤–∞—à –ø—Ä–æ–µ–∫—Ç. –ù–∞—á–Ω–µ–º —Å –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ?
                –ò–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª–Ω—É—é —Å–∏–º—É–ª—è—Ü–∏—é –ø–∏—Ç—á–∞?"
              </p>
            </div>
          </div>

          <div className="grid grid-cols-2 gap-4">
            <button
              className="bg-green-500 hover:bg-green-600 text-white p-6 rounded-lg transition-all transform hover:scale-105"
              onClick={() => setActiveTab('training')}
            >
              <div className="text-2xl mb-2">üéÆ</div>
              <div className="font-semibold">–ë—ã—Å—Ç—Ä–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞</div>
              <div className="text-sm opacity-90">5-10 –º–∏–Ω—É—Ç</div>
            </button>

            <button
              className="bg-red-500 hover:bg-red-600 text-white p-6 rounded-lg transition-all transform hover:scale-105"
              onClick={() => setActiveTab('training')}
            >
              <div className="text-2xl mb-2">üî•</div>
              <div className="font-semibold">–ü–æ–ª–Ω–∞—è —Å–∏–º—É–ª—è—Ü–∏—è</div>
              <div className="text-sm opacity-90">20-30 –º–∏–Ω—É—Ç</div>
            </button>

            <button
              className="bg-blue-500 hover:bg-blue-600 text-white p-6 rounded-lg transition-all transform hover:scale-105"
              onClick={() => setActiveTab('analysis')}
            >
              <div className="text-2xl mb-2">üìù</div>
              <div className="font-semibold">–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞</div>
              <div className="text-sm opacity-90">AI-–∞—É–¥–∏—Ç</div>
            </button>

            <button
              className="bg-purple-500 hover:bg-purple-600 text-white p-6 rounded-lg transition-all transform hover:scale-105"
              onClick={() => setActiveTab('settings')}
            >
              <div className="text-2xl mb-2">‚öôÔ∏è</div>
              <div className="font-semibold">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</div>
              <div className="text-sm opacity-90">–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è</div>
            </button>
          </div>
        </div>
      </div>

      {/* Right Panel - Progress */}
      <div className="w-80 bg-slate-50 p-6 border-l">
        <div className="mb-8">
          <h3 className="text-lg font-bold text-gray-800 mb-4">
            üìà –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å
          </h3>

          {Object.entries(skills).map(([skill, value]) => {
            const skillNames = {
              persuasiveness: { name: '–£–±–µ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', icon: 'üéØ' },
              clarity: { name: '–ß–µ—Ç–∫–æ—Å—Ç—å —Ä–µ—á–∏', icon: 'üó£' },
              stress: { name: '–°—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å', icon: '‚ö°' },
              knowledge: { name: '–ó–Ω–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞', icon: 'üß†' },
            };

            return (
              <div key={skill} className="mb-4">
                <div className="flex items-center justify-between mb-1">
                  <span className="text-sm font-medium text-gray-700">
                    {skillNames[skill].icon} {skillNames[skill].name}
                  </span>
                  <span className="text-sm text-gray-500">{value}%</span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2">
                  <div
                    className={`h-2 rounded-full transition-all ${
                      value >= 80
                        ? 'bg-green-500'
                        : value >= 60
                        ? 'bg-yellow-500'
                        : 'bg-red-500'
                    }`}
                    style={{ width: `${value}%` }}
                  />
                </div>
              </div>
            );
          })}
        </div>

        <div className="mb-8">
          <h3 className="text-lg font-bold text-gray-800 mb-4">
            üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
          </h3>
          <div className="space-y-2">
            {achievements.map((achievement, index) => (
              <div
                key={index}
                className={`p-3 rounded-lg flex items-center justify-between ${
                  achievement.unlocked
                    ? 'bg-yellow-50 border border-yellow-200'
                    : 'bg-gray-50 border border-gray-200'
                }`}
              >
                <div className="flex items-center">
                  <span className="text-lg mr-2">{achievement.icon}</span>
                  <span
                    className={`text-sm ${
                      achievement.unlocked ? 'text-gray-800' : 'text-gray-400'
                    }`}
                  >
                    {achievement.name}
                  </span>
                </div>
                {achievement.isNew && (
                  <span className="bg-red-500 text-white text-xs px-2 py-1 rounded-full">
                    new
                  </span>
                )}
              </div>
            ))}
          </div>
        </div>

        <div>
          <h3 className="text-lg font-bold text-gray-800 mb-4">
            üìÖ –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–µ—Å—Å–∏–∏
          </h3>
          <div className="space-y-3">
            {[
              { time: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥', type: '–ü–∏—Ç—á', score: '8.2/10' },
              { time: '–í—á–µ—Ä–∞', type: 'Q&A —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞', score: '7.1/10' },
              {
                time: '3 –¥–Ω—è –Ω–∞–∑–∞–¥',
                type: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∏–Ω—Ç–µ—Ä–≤—å—é',
                score: '6.8/10',
              },
            ].map((session, index) => (
              <div
                key={index}
                className="bg-white p-3 rounded-lg border border-gray-200"
              >
                <div className="flex justify-between items-center mb-1">
                  <span className="text-sm font-medium text-gray-800">
                    {session.type}
                  </span>
                  <span className="text-sm text-green-600 font-semibold">
                    {session.score}
                  </span>
                </div>
                <div className="text-xs text-gray-500">{session.time}</div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );

  // Training Component
  const Training = () => {
    const [sessionTime, setSessionTime] = useState('08:23');
    const [aiMessage, setAiMessage] = useState(
      '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –∏–¥–µ—è! –ê –∫–∞–∫ –≤—ã —Ä–µ—à–∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—É —Å cold storage –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤?'
    );
    const [contextInfo, setContextInfo] = useState(
      "–°–ª–∞–π–¥ 5: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ'"
    );

    return (
      <div className="h-full bg-gray-900 text-white">
        {/* Header */}
        <div className="bg-gray-800 p-4 flex items-center justify-between">
          <div className="flex items-center">
            <div className="w-3 h-3 bg-red-500 rounded-full mr-3 animate-pulse"></div>
            <span className="font-medium">
              –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ ‚Ä¢ {projects[selectedProject].name} ‚Ä¢ {sessionTime}
            </span>
          </div>
          <button
            onClick={() => setActiveTab('dashboard')}
            className="bg-red-600 hover:bg-red-700 px-4 py-2 rounded text-sm"
          >
            –ó–∞–≤–µ—Ä—à–∏—Ç—å
          </button>
        </div>

        {/* Main Content */}
        <div className="flex h-full">
          {/* Video Chat Area */}
          <div className="flex-1 p-6">
            {/* AI Mentor Video */}
            <div className="bg-gradient-to-br from-blue-600 to-purple-700 rounded-lg mb-6 p-8 text-center h-96 flex flex-col justify-center">
              <div className="text-6xl mb-4">ü§ñ</div>
              <div className="text-xl mb-4 font-semibold">AI-–ú–µ–Ω—Ç–æ—Ä</div>
              <div className="bg-black bg-opacity-30 p-4 rounded-lg">
                <p className="text-lg italic">"{aiMessage}"</p>
              </div>
            </div>

            {/* User Video and Controls */}
            <div className="flex justify-between items-end">
              {/* User Video */}
              <div className="w-48 h-36 bg-gray-700 rounded-lg flex items-center justify-center">
                <div className="text-4xl">üë§</div>
                <div className="absolute bottom-2 left-2 text-sm">–í—ã</div>
              </div>

              {/* Controls */}
              <div className="flex items-center space-x-4">
                <button
                  onClick={() => setIsMuted(!isMuted)}
                  className={`p-3 rounded-full ${
                    isMuted ? 'bg-red-600' : 'bg-gray-600 hover:bg-gray-500'
                  }`}
                >
                  {isMuted ? <MicOff size={20} /> : <Mic size={20} />}
                </button>

                <button
                  onClick={() => setIsTraining(!isTraining)}
                  className="bg-blue-600 hover:bg-blue-700 px-6 py-3 rounded-lg font-medium"
                >
                  {isTraining ? <Pause size={20} /> : <Play size={20} />}
                  <span className="ml-2">
                    {isTraining ? '–ü–∞—É–∑–∞' : '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'}
                  </span>
                </button>
              </div>
            </div>

            {/* Live Analysis */}
            <div className="mt-6 bg-black bg-opacity-50 p-4 rounded-lg">
              <div className="flex justify-between items-center mb-2">
                <h3 className="text-lg font-semibold">üìä LIVE –ê–ù–ê–õ–ò–ó</h3>
                <span className="text-green-400 font-bold">
                  Score: {currentScore}/10
                </span>
              </div>
              <div className="grid grid-cols-4 gap-4 text-sm">
                <div>
                  <div className="text-gray-400">–°–ª–æ–≤/–º–∏–Ω</div>
                  <div className="font-bold text-green-400">145 üëç</div>
                </div>
                <div>
                  <div className="text-gray-400">–ü–∞—É–∑—ã</div>
                  <div className="font-bold text-yellow-400">8—Å–µ–∫ ‚ö†Ô∏è</div>
                </div>
                <div>
                  <div className="text-gray-400">–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å</div>
                  <div className="font-bold text-blue-400">7.2/10</div>
                </div>
                <div>
                  <div className="text-gray-400">"—ç–º/—ç—ç—ç"</div>
                  <div className="font-bold text-red-400">3 –∑–∞ –º–∏–Ω</div>
                </div>
              </div>
            </div>
          </div>

          {/* Context Panel */}
          <div className="w-80 bg-gray-800 p-6">
            <h3 className="text-lg font-bold mb-4">üìã –£–º–Ω–∞—è –ø–∞–Ω–µ–ª—å</h3>

            <div className="space-y-4">
              <div className="bg-gray-700 p-4 rounded-lg">
                <div className="font-semibold mb-2">üìÑ –¢–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç</div>
                <div className="text-sm text-gray-300">{contextInfo}</div>
                <div className="text-sm text-gray-300 mt-1">
                  GitHub: /api/storage.py
                </div>
              </div>

              <div className="bg-yellow-900 bg-opacity-50 p-4 rounded-lg">
                <div className="font-semibold mb-2">üí° AI –≤–∏–¥–∏—Ç –ø—Ä–æ–±–ª–µ–º—É:</div>
                <div className="text-sm text-yellow-200">
                  "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è —Ö–æ–ª–æ–¥–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∫–æ–¥–µ"
                </div>
              </div>

              <div className="bg-gray-700 p-4 rounded-lg">
                <div className="font-semibold mb-2">
                  üí¨ –ò—Å—Ç–æ—Ä–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ (3)
                </div>
                <div className="text-sm text-gray-300 space-y-1">
                  <div>‚Ä¢ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–∏—Å—Ç–µ–º—ã</div>
                  <div>‚Ä¢ –ú–æ–¥–µ–ª—å –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏</div>
                  <div>‚Ä¢ –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ</div>
                </div>
              </div>

              <div className="bg-red-900 bg-opacity-50 p-4 rounded-lg">
                <div className="font-semibold mb-2">üéØ –°–ª–∞–±—ã–µ –º–µ—Å—Ç–∞</div>
                <div className="text-sm text-red-200">‚ö†Ô∏è –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è (!)</div>
              </div>

              <div className="bg-blue-900 bg-opacity-50 p-4 rounded-lg">
                <div className="font-semibold mb-2">üí° –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è AI</div>
                <div className="text-sm text-blue-200 space-y-1">
                  <div>‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—Ä—ã –∫–ª–∏–µ–Ω—Ç–æ–≤</div>
                  <div>‚Ä¢ –ü–æ–∫–∞–∑–∞—Ç—å unit economics</div>
                </div>
              </div>

              {/* Stress-O-Meter */}
              <div className="bg-gray-700 p-4 rounded-lg">
                <div className="font-semibold mb-2">üòå –°—Ç—Ä–µ—Å—Å-–º–µ—Ç—Ä</div>
                <div className="mb-2">
                  <div className="flex justify-between text-sm mb-1">
                    <span>–ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞</span>
                    <span>{100 - stressLevel}%</span>
                  </div>
                  <div className="w-full bg-gray-600 rounded-full h-2">
                    <div
                      className="bg-green-500 h-2 rounded-full"
                      style={{ width: `${100 - stressLevel}%` }}
                    />
                  </div>
                </div>
                <div className="mb-2">
                  <div className="flex justify-between text-sm mb-1">
                    <span>–ó–æ–Ω–∞ —Ä–æ—Å—Ç–∞</span>
                    <span>{stressLevel}%</span>
                  </div>
                  <div className="w-full bg-gray-600 rounded-full h-2">
                    <div
                      className="bg-yellow-500 h-2 rounded-full"
                      style={{ width: `${stressLevel}%` }}
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  };

  // Analysis Component
  const Analysis = () => (
    <div className="p-8 h-full bg-gray-50">
      <div className="max-w-6xl mx-auto">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-800 mb-2">
            üìù AI-–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞ "{projects[selectedProject].name}"
          </h1>
          <p className="text-gray-600">
            –ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Document Heat Map */}
          <div className="lg:col-span-2 bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-bold mb-4">üî• Heat Map –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</h2>
            <div className="space-y-4">
              <div className="border rounded-lg p-4">
                <h3 className="font-semibold mb-3">üìÑ presentation.pptx</h3>
                <div className="space-y-2">
                  {[
                    {
                      title: '–°–ª–∞–π–¥ 1: –ü—Ä–æ–±–ª–µ–º–∞',
                      status: 'good',
                      color: 'bg-green-200',
                    },
                    {
                      title: '–°–ª–∞–π–¥ 2: –†–µ—à–µ–Ω–∏–µ',
                      status: 'good',
                      color: 'bg-green-200',
                    },
                    {
                      title: '–°–ª–∞–π–¥ 3: –†—ã–Ω–æ–∫',
                      status: 'warning',
                      color: 'bg-yellow-200',
                    },
                    {
                      title: '–°–ª–∞–π–¥ 4: –ü—Ä–æ–¥—É–∫—Ç',
                      status: 'good',
                      color: 'bg-green-200',
                    },
                    {
                      title: '–°–ª–∞–π–¥ 5: –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
                      status: 'danger',
                      color: 'bg-red-200',
                    },
                    {
                      title: '–°–ª–∞–π–¥ 6: –ë–∏–∑–Ω–µ—Å-–º–æ–¥–µ–ª—å',
                      status: 'danger',
                      color: 'bg-red-200',
                    },
                    {
                      title: '–°–ª–∞–π–¥ 7: –§–∏–Ω–∞–Ω—Å—ã',
                      status: 'warning',
                      color: 'bg-yellow-200',
                    },
                    {
                      title: '–°–ª–∞–π–¥ 8: –ö–æ–º–∞–Ω–¥–∞',
                      status: 'good',
                      color: 'bg-green-200',
                    },
                  ].map((slide, index) => (
                    <div
                      key={index}
                      className={`p-3 rounded ${slide.color} flex justify-between items-center`}
                    >
                      <span className="text-sm font-medium">{slide.title}</span>
                      <span className="text-xs">
                        {slide.status === 'good' && 'üü¢ AI –ø–æ–Ω–∏–º–∞–µ—Ç'}
                        {slide.status === 'warning' &&
                          'üü° –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã'}
                        {slide.status === 'danger' && 'üî¥ –°–ª–∞–±—ã–µ –º–µ—Å—Ç–∞'}
                      </span>
                    </div>
                  ))}
                </div>
              </div>

              <div className="border rounded-lg p-4">
                <h3 className="font-semibold mb-3">üêô GitHub Repository</h3>
                <div className="space-y-2">
                  {[
                    {
                      file: '/src/api/storage.py',
                      issues: '–ù–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ —Ö–æ–ª–æ–¥–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è',
                    },
                    {
                      file: '/src/models/pricing.py',
                      issues: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç unit economics',
                    },
                    { file: '/README.md', issues: '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã' },
                  ].map((item, index) => (
                    <div
                      key={index}
                      className="bg-red-50 p-3 rounded border-l-4 border-red-400"
                    >
                      <div className="font-medium text-sm">{item.file}</div>
                      <div className="text-xs text-red-600 mt-1">
                        ‚ö†Ô∏è {item.issues}
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>

          {/* Analysis Results */}
          <div className="space-y-6">
            <div className="bg-white rounded-lg shadow-lg p-6">
              <h2 className="text-xl font-bold mb-4">üéØ –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞</h2>
              <div className="text-center mb-4">
                <div className="text-4xl font-bold text-blue-600">7.2</div>
                <div className="text-gray-500">–∏–∑ 10</div>
              </div>
              <div className="space-y-3">
                <div>
                  <div className="flex justify-between text-sm mb-1">
                    <span>–°—Ç—Ä—É–∫—Ç—É—Ä–∞</span>
                    <span>8.5/10</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div
                      className="bg-green-500 h-2 rounded-full"
                      style={{ width: '85%' }}
                    ></div>
                  </div>
                </div>
                <div>
                  <div className="flex justify-between text-sm mb-1">
                    <span>–£–±–µ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</span>
                    <span>6.1/10</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div
                      className="bg-yellow-500 h-2 rounded-full"
                      style={{ width: '61%' }}
                    ></div>
                  </div>
                </div>
                <div>
                  <div className="flex justify-between text-sm mb-1">
                    <span>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –≥–ª—É–±–∏–Ω–∞</span>
                    <span>7.0/10</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div
                      className="bg-blue-500 h-2 rounded-full"
                      style={{ width: '70%' }}
                    ></div>
                  </div>
                </div>
              </div>
            </div>

            <div className="bg-white rounded-lg shadow-lg p-6">
              <h2 className="text-xl font-bold mb-4">üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã</h2>
              <div className="space-y-3">
                <div className="bg-red-50 p-3 rounded border-l-4 border-red-400">
                  <div className="font-medium text-sm text-red-800">
                    –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è
                  </div>
                  <div className="text-xs text-red-600 mt-1">
                    "–ö–∞–∫ –∏–º–µ–Ω–Ω–æ –≤—ã –±—É–¥–µ—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å?"
                  </div>
                </div>
                <div className="bg-red-50 p-3 rounded border-l-4 border-red-400">
                  <div className="font-medium text-sm text-red-800">
                    –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã
                  </div>
                  <div className="text-xs text-red-600 mt-1">
                    "–ß–µ–º –≤—ã –ª—É—á—à–µ Uber Eats?"
                  </div>
                </div>
                <div className="bg-yellow-50 p-3 rounded border-l-4 border-yellow-400">
                  <div className="font-medium text-sm text-yellow-800">
                    –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
                  </div>
                  <div className="text-xs text-yellow-600 mt-1">
                    "–ö–∞–∫ –±—É–¥–µ—Ç–µ —Ä–∞—Å—Ç–∏ –≤ –¥—Ä—É–≥–∏—Ö –≥–æ—Ä–æ–¥–∞—Ö?"
                  </div>
                </div>
              </div>
            </div>

            <div className="bg-white rounded-lg shadow-lg p-6">
              <h2 className="text-xl font-bold mb-4">üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h2>
              <div className="space-y-3">
                <div className="flex items-start space-x-2">
                  <div className="text-green-600 mt-1">‚úì</div>
                  <div className="text-sm">
                    –î–æ–±–∞–≤—å—Ç–µ —Ä–∞–∑–¥–µ–ª –æ unit economics –≤ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é
                  </div>
                </div>
                <div className="flex items-start space-x-2">
                  <div className="text-green-600 mt-1">‚úì</div>
                  <div className="text-sm">
                    –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ 3-5 –∫–µ–π—Å–æ–≤ —É—Å–ø–µ—à–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
                  </div>
                </div>
                <div className="flex items-start space-x-2">
                  <div className="text-green-600 mt-1">‚úì</div>
                  <div className="text-sm">
                    –û–ø–∏—à–∏—Ç–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –≤ README
                  </div>
                </div>
                <div className="flex items-start space-x-2">
                  <div className="text-green-600 mt-1">‚úì</div>
                  <div className="text-sm">
                    –°–æ–∑–¥–∞–π—Ç–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å —Ç–∞–±–ª–∏—Ü–µ–π
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  // Settings Component
  const Settings = () => (
    <div className="p-8 h-full bg-gray-50">
      <div className="max-w-4xl mx-auto">
        <h1 className="text-3xl font-bold text-gray-800 mb-8">
          ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–∞
        </h1>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* AI Personality */}
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-bold mb-4">ü§ñ –õ–∏—á–Ω–æ—Å—Ç—å AI-–º–µ–Ω—Ç–æ—Ä–∞</h2>
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è
                </label>
                <select className="w-full p-3 border border-gray-300 rounded-lg">
                  <option>–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫</option>
                  <option>–°—Ç—Ä–æ–≥–∏–π –∫—Ä–∏—Ç–∏–∫</option>
                  <option>–ò–Ω–≤–µ—Å—Ç–æ—Ä –∏–∑ –ö—Ä–µ–º–Ω–∏–µ–≤–æ–π –¥–æ–ª–∏–Ω—ã</option>
                  <option>–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤–æ–ø—Ä–æ—Å–æ–≤
                </label>
                <div className="space-y-2">
                  <label className="flex items-center">
                    <input type="radio" name="difficulty" className="mr-2" />
                    <span>–ë–∞–∑–æ–≤—ã–π - –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤</span>
                  </label>
                  <label className="flex items-center">
                    <input
                      type="radio"
                      name="difficulty"
                      className="mr-2"
                      defaultChecked
                    />
                    <span>–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π - –∫–∞–≤–µ—Ä–∑–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã</span>
                  </label>
                  <label className="flex items-center">
                    <input type="radio" name="difficulty" className="mr-2" />
                    <span>–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π - –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Å—Ç—Ä–µ—Å—Å</span>
                  </label>
                </div>
              </div>
            </div>
          </div>

          {/* Training Preferences */}
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-bold mb-4">
              üéØ –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
            </h2>
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –§–æ–∫—É—Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
                </label>
                <div className="space-y-2">
                  <label className="flex items-center">
                    <input type="checkbox" className="mr-2" defaultChecked />
                    <span>–£–±–µ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤</span>
                  </label>
                  <label className="flex items-center">
                    <input type="checkbox" className="mr-2" defaultChecked />
                    <span>–ß–µ—Ç–∫–æ—Å—Ç—å —Ä–µ—á–∏</span>
                  </label>
                  <label className="flex items-center">
                    <input type="checkbox" className="mr-2" />
                    <span>–†–∞–±–æ—Ç–∞ —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º</span>
                  </label>
                  <label className="flex items-center">
                    <input type="checkbox" className="mr-2" defaultChecked />
                    <span>–û—Ç–≤–µ—Ç—ã –Ω–∞ –∫–∞–≤–µ—Ä–∑–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã</span>
                  </label>
                </div>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏
                </label>
                <select className="w-full p-3 border border-gray-300 rounded-lg">
                  <option>5 –º–∏–Ω—É—Ç - –±—ã—Å—Ç—Ä–∞—è —Ä–∞–∑–º–∏–Ω–∫–∞</option>
                  <option>15 –º–∏–Ω—É—Ç - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞</option>
                  <option>30 –º–∏–Ω—É—Ç - –ø–æ–ª–Ω–∞—è —Å–∏–º—É–ª—è—Ü–∏—è</option>
                  <option>60 –º–∏–Ω—É—Ç - –º–∞—Ä–∞—Ñ–æ–Ω</option>
                </select>
              </div>
            </div>
          </div>

          {/* Integrations */}
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-bold mb-4">üîó –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</h2>
            <div className="space-y-4">
              <div className="flex items-center justify-between p-3 border rounded-lg">
                <div className="flex items-center">
                  <Github className="mr-3 text-gray-600" size={20} />
                  <div>
                    <div className="font-medium">GitHub</div>
                    <div className="text-sm text-gray-500">
                      –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è–º–∏
                    </div>
                  </div>
                </div>
                <div className="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm">
                  –ü–æ–¥–∫–ª—é—á–µ–Ω–æ
                </div>
              </div>

              <div className="flex items-center justify-between p-3 border rounded-lg">
                <div className="flex items-center">
                  <FileText className="mr-3 text-gray-600" size={20} />
                  <div>
                    <div className="font-medium">Google Drive</div>
                    <div className="text-sm text-gray-500">
                      –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π
                    </div>
                  </div>
                </div>
                <button className="bg-blue-500 text-white px-3 py-1 rounded text-sm hover:bg-blue-600">
                  –ü–æ–¥–∫–ª—é—á–∏—Ç—å
                </button>
              </div>

              <div className="flex items-center justify-between p-3 border rounded-lg">
                <div className="flex items-center">
                  <Video className="mr-3 text-gray-600" size={20} />
                  <div>
                    <div className="font-medium">Zoom</div>
                    <div className="text-sm text-gray-500">
                      –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á–∞—Ö
                    </div>
                  </div>
                </div>
                <button className="bg-blue-500 text-white px-3 py-1 rounded text-sm hover:bg-blue-600">
                  –ü–æ–¥–∫–ª—é—á–∏—Ç—å
                </button>
              </div>
            </div>
          </div>

          {/* Voice Settings */}
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-bold mb-4">
              üé§ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–æ–ª–æ—Å–∞ –∏ –≤–∏–¥–µ–æ
            </h2>
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ì–æ–ª–æ—Å AI-–º–µ–Ω—Ç–æ—Ä–∞
                </label>
                <select className="w-full p-3 border border-gray-300 rounded-lg">
                  <option>–ú—É–∂—Å–∫–æ–π –≥–æ–ª–æ—Å (–ê–ª–µ–∫—Å–∞–Ω–¥—Ä)</option>
                  <option>–ñ–µ–Ω—Å–∫–∏–π –≥–æ–ª–æ—Å (–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞)</option>
                  <option>–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π –≥–æ–ª–æ—Å</option>
                  <option>–ê–Ω–≥–ª–∏–π—Å–∫–∏–π –∞–∫—Ü–µ–Ω—Ç</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –°–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏ AI
                </label>
                <input
                  type="range"
                  min="0.5"
                  max="2"
                  step="0.1"
                  defaultValue="1"
                  className="w-full"
                />
                <div className="flex justify-between text-xs text-gray-500 mt-1">
                  <span>–ú–µ–¥–ª–µ–Ω–Ω–æ</span>
                  <span>–ù–æ—Ä–º–∞–ª—å–Ω–æ</span>
                  <span>–ë—ã—Å—Ç—Ä–æ</span>
                </div>
              </div>

              <div className="space-y-2">
                <label className="flex items-center">
                  <input type="checkbox" className="mr-2" defaultChecked />
                  <span>–í–∫–ª—é—á–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –º–∏–º–∏–∫–∏</span>
                </label>
                <label className="flex items-center">
                  <input type="checkbox" className="mr-2" defaultChecked />
                  <span>–ê–Ω–∞–ª–∏–∑ –∂–µ—Å—Ç–æ–≤ –∏ –ø–æ–∑—ã</span>
                </label>
                <label className="flex items-center">
                  <input type="checkbox" className="mr-2" />
                  <span>–ó–∞–ø–∏—Å—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã—Ö —Å–µ—Å—Å–∏–π</span>
                </label>
              </div>
            </div>
          </div>
        </div>

        <div className="mt-8 flex justify-end space-x-4">
          <button
            onClick={() => setActiveTab('dashboard')}
            className="px-6 py-3 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50"
          >
            –û—Ç–º–µ–Ω–∞
          </button>
          <button className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          </button>
        </div>
      </div>
    </div>
  );

  // Navigation
  const Navigation = () => (
    <div className="bg-white border-b shadow-sm">
      <div className="flex items-center justify-between px-6 py-4">
        <div className="flex items-center space-x-8">
          <div className="flex items-center space-x-2">
            <div className="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center">
              <span className="text-white text-sm font-bold">AI</span>
            </div>
            <span className="text-xl font-bold text-gray-800">PitchMaster</span>
          </div>

          <nav className="flex space-x-6">
            <button
              onClick={() => setActiveTab('dashboard')}
              className={`px-3 py-2 rounded-lg font-medium transition-all ${
                activeTab === 'dashboard'
                  ? 'bg-blue-100 text-blue-700'
                  : 'text-gray-600 hover:text-gray-800'
              }`}
            >
              üè† –ì–ª–∞–≤–Ω–∞—è
            </button>
            <button
              onClick={() => setActiveTab('training')}
              className={`px-3 py-2 rounded-lg font-medium transition-all ${
                activeTab === 'training'
                  ? 'bg-blue-100 text-blue-700'
                  : 'text-gray-600 hover:text-gray-800'
              }`}
            >
              üéØ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞
            </button>
            <button
              onClick={() => setActiveTab('analysis')}
              className={`px-3 py-2 rounded-lg font-medium transition-all ${
                activeTab === 'analysis'
                  ? 'bg-blue-100 text-blue-700'
                  : 'text-gray-600 hover:text-gray-800'
              }`}
            >
              üìä –ê–Ω–∞–ª–∏–∑
            </button>
            <button
              onClick={() => setActiveTab('settings')}
              className={`px-3 py-2 rounded-lg font-medium transition-all ${
                activeTab === 'settings'
                  ? 'bg-blue-100 text-blue-700'
                  : 'text-gray-600 hover:text-gray-800'
              }`}
            >
              ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
            </button>
          </nav>
        </div>

        <div className="flex items-center space-x-4">
          <div className="text-sm text-gray-600">
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <span className="font-semibold">–ê–ª–µ–∫—Å–∞–Ω–¥—Ä</span>
          </div>
          <div className="w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center">
            üë§
          </div>
        </div>
      </div>
    </div>
  );

  // Main App
  return (
    <div className="h-screen flex flex-col bg-gray-100">
      <Navigation />
      <div className="flex-1 overflow-hidden">
        {activeTab === 'dashboard' && <Dashboard />}
        {activeTab === 'training' && <Training />}
        {activeTab === 'analysis' && <Analysis />}
        {activeTab === 'settings' && <Settings />}
      </div>
      <AddProjectModal />
    </div>
  );
};

export default AITrainer;
